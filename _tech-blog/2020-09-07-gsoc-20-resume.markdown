---
title: GSoC 20 - Automatized support for Organised Editing Guidelines
date: 2020-09-07 12:30:00 Z
Summary Text: Here is a resume from the Google Summer of Code 2020 project that adds
  automatized support for Organised Editing Guidelines to Tasking Manager.
Feature Image: "/uploads/gsoc-20-feature-image.jpg"
Person:
- João Vitor Ramos
---

## The problem

The OpenStreetMap (OSM) project has established formal [Organised Editing Guidelines](https://wiki.osmfoundation.org/wiki/Organised_Editing_Guidelines), which require all groups and organized activities of mapping on OpenStreetMap to report transparently how they organize and what they are mapping on.

The Tasking Manager is the most used application in the OSM ecosystem for volunteers, but also professionals, to team up and coordinate mapping and due to the large amount of organised editing done through the Tasking Manager, ensuring correct documentation is completed for all projects has become difficult. In order to ease up the user experience of fulfilling the guidelines for organized editing, the goal of my project this summer is to make the process of reporting back data for OpenStreetMap automatically.

## Project solutions

To improve the documentation of organised editing for Tasking Manager projects, we thought that automatically reporting project data from TM to the OSM Wiki could be a good solution. After that, we started with an analysis of contents and fields that are required or suggested by the organized editing guidelines, then we check whether these are already available in the Tasking Manager, or not.

Then we implemented a small proof of concept for testing out how the communication between [Tasking Manager](https://tasks.hotosm.org/) and OSM Community should occur. Although the OSM’s organized editing guidelines suggest the project wiki for reporting of organized mapping activities, we wanted to include two technical ideas for this initial test:
- Report data directly to the [OSM wiki](https://wiki.openstreetmap.org/wiki/Main_Page)
- Store files in a human-readable format in a git repository (GitHub, Gitlab, etc)

## Validating ideas

We participated in the [State of the Map 2020](https://2020.stateofthemap.org/) conference as a self-organized session in order to validate the project solutions initially thought and receive more feedback from the community.

We received some suggestions on the initial ideas, mainly for reporting data to the wiki directly instead of reporting to a git repository. After discussing internally, we reached a consensus that it would be better to use both solutions, instead of just one as thought at the beginning of the project. Comming to this architecture and also, a cool name to the project - [OEG Reporter](https://github.com/hotosm/oeg-reporter).

![](/uploads/gsoc-20-architecture.jpg)

*Image 1 - Description of architecture of communication between the Tasking Manager and the OpenStreetMap*
<br><br>


## Implementation

After defining with the community the solutions to be used, we implemented the data report for a git repository and to an instance of MediaWiki (the system used by the [OSM wiki](https://wiki.openstreetmap.org/wiki/Main_Page)) in a Flask API, mainly using libraries to format data according to the format used by the [OSM wiki](https://wiki.openstreetmap.org/wiki/Main_Page) ([wikitextparser](https://pypi.org/project/wikitextparser/) library) and upload and update files in a git repository (using [gitpython](https://pypi.org/project/GitPython/) library).

The most challenging part of the project's development was definitely to implement data reporting for the wiki, due to the file format used by the [OSM wiki](https://wiki.openstreetmap.org/wiki/Main_Page) having a slightly more complex syntax, but after a few weeks of study this was possible. [OEG reporter](https://github.com/hotosm/oeg-reporter) integration with Tasking Manager can be seen in the next images.<br>

### User selects if the organisation is going to enable the automated OEG Report

![](/uploads/gsoc-20-enable-report-option.png)

*Image 2 - Option to enable automatic project data reporting*
<br><br>

### Project manager saves the project

![](/uploads/gsoc-20-save-project-data.png)

*Image 3 - Project manager saving project data*
<br><br>

### Project data is reported to a git repository

![](/uploads/gsoc-20-project-data-reported-to-git-repo.png)

*Image 4 - Project data reported to a git repository*
<br><br>

### Project data is reported to a Mediawiki instance into three different pages

#### Activities list - Contains all Organised Editing activities

![](/uploads/gsoc-20-mediawiki-activities-list-page.png)

*Image 5 - Wiki Page containing the list of Organisations*
<br><br>

#### Organisation page - Details about the organisation and a list of all its projects

![](/uploads/gsoc-20-mediawiki-organisation-page.png)

*Image 6 - Wiki Page containing data about the organisation and all its projects*
<br><br>

#### Project page - data of a project

![](/uploads/gsoc-20-mediawiki-project-page.png)

*Image 7 - Wiki Page generated automatically by OEG-Reporter with the project data*
<br><br>

## Final words

I would like to thank the HOT tech team for all their help and the opportunity to work with them all this summer, it was one of the best experiences of my professional and personal life to have the chance to work with so many people from different cultures and places, even more with the ultimate goal of helping people in need.

Checkout the [OEG reporter project on GitHub](https://github.com/hotosm/oeg-reporter).
